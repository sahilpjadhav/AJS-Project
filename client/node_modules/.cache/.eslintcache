[{"C:\\Users\\ASUS\\Desktop\\tutorial-blog_post_app-master\\client\\src\\index.js":"1","C:\\Users\\ASUS\\Desktop\\tutorial-blog_post_app-master\\client\\src\\App.js":"2","C:\\Users\\ASUS\\Desktop\\tutorial-blog_post_app-master\\client\\src\\context\\authContext.js":"3","C:\\Users\\ASUS\\Desktop\\tutorial-blog_post_app-master\\client\\src\\pages\\Login.jsx":"4","C:\\Users\\ASUS\\Desktop\\tutorial-blog_post_app-master\\client\\src\\pages\\Register.jsx":"5","C:\\Users\\ASUS\\Desktop\\tutorial-blog_post_app-master\\client\\src\\pages\\Home.jsx":"6","C:\\Users\\ASUS\\Desktop\\tutorial-blog_post_app-master\\client\\src\\pages\\Single.jsx":"7","C:\\Users\\ASUS\\Desktop\\tutorial-blog_post_app-master\\client\\src\\pages\\Write.jsx":"8","C:\\Users\\ASUS\\Desktop\\tutorial-blog_post_app-master\\client\\src\\components\\Footer.jsx":"9","C:\\Users\\ASUS\\Desktop\\tutorial-blog_post_app-master\\client\\src\\components\\Navbar.jsx":"10","C:\\Users\\ASUS\\Desktop\\tutorial-blog_post_app-master\\client\\src\\components\\Menu.jsx":"11"},{"size":348,"mtime":1710060162254,"results":"12","hashOfConfig":"13"},{"size":1619,"mtime":1710060162223,"results":"14","hashOfConfig":"13"},{"size":1567,"mtime":1710060162410,"results":"15","hashOfConfig":"13"},{"size":2022,"mtime":1710060162613,"results":"16","hashOfConfig":"13"},{"size":2440,"mtime":1710060162645,"results":"17","hashOfConfig":"13"},{"size":2422,"mtime":1710063131405,"results":"18","hashOfConfig":"13"},{"size":2986,"mtime":1710063307863,"results":"19","hashOfConfig":"13"},{"size":5342,"mtime":1710061967847,"results":"20","hashOfConfig":"13"},{"size":311,"mtime":1710060162316,"results":"21","hashOfConfig":"13"},{"size":1664,"mtime":1710062162809,"results":"22","hashOfConfig":"13"},{"size":1350,"mtime":1710060162348,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"6ozbqz",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ASUS\\Desktop\\tutorial-blog_post_app-master\\client\\src\\index.js",[],[],"C:\\Users\\ASUS\\Desktop\\tutorial-blog_post_app-master\\client\\src\\App.js",[],[],"C:\\Users\\ASUS\\Desktop\\tutorial-blog_post_app-master\\client\\src\\context\\authContext.js",[],[],"C:\\Users\\ASUS\\Desktop\\tutorial-blog_post_app-master\\client\\src\\pages\\Login.jsx",[],[],"C:\\Users\\ASUS\\Desktop\\tutorial-blog_post_app-master\\client\\src\\pages\\Register.jsx",[],[],"C:\\Users\\ASUS\\Desktop\\tutorial-blog_post_app-master\\client\\src\\pages\\Home.jsx",["59"],[],"import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nconst Home = () => {\n  // Declaring a state variable called posts and initializing it to an empty array\n  const [posts, setPosts] = useState([]);\n\n  // Getting the current URL query string (if any) using the useLocation hook from react-router-dom\n  const cat = useLocation().search;\n\n  // Defining an effect that runs when the cat variable changes\n  useEffect(() => {\n    // Defining an asynchronous function called fetchData\n    const fetchData = async () => {\n      try {\n        // Making an HTTP GET request to the server to retrieve posts data based on the cat variable\n        const res = await axios.get(`/posts${cat}`);\n        // Updating the posts state variable with the retrieved data\n        setPosts(res.data);\n      } catch (err) {\n        // Logging any errors that occur during the request\n        console.log(err);\n      }\n    };\n    // Calling the fetchData function\n    fetchData();\n  }, [cat]); // Specifying that this effect should only run when the cat variable changes\n\n  // Defining a helper function called getText that takes an HTML string and returns the text content\n  const getText = (html) => {\n    const doc = new DOMParser().parseFromString(html, \"text/html\");\n    return doc.body.textContent;\n  };\n\n  // Rendering the Home component\n  return (\n    <div className=\"home\">\n      <div className=\"posts\">\n        {/* Mapping over the posts state variable and rendering a Post component for each post */}\n        {posts.map((post) => (\n          <div className=\"post\" key={post.id}>\n            <div className=\"post-img\">\n              {/* Rendering the post image */}\n              <img src={`../upload/${post.img}`} alt=\"post cover\" />\n            </div>\n            <div className=\"content\">\n              {/* Rendering a link to the post page */}\n              <Link className=\"link\" to={`/post/${post.id}`}>\n                <h1>{post.title}</h1>\n              </Link>\n              {/* Rendering the post description */}\n              {/* <p>{getText(post.desc)}</p> */}\n              {/* Rendering a button to read more */}\n              <Link className=\"link\" to={`/post/${post.id}`}>\n                <button>Read More</button>\n              </Link>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n",[],"C:\\Users\\ASUS\\Desktop\\tutorial-blog_post_app-master\\client\\src\\pages\\Single.jsx",[],[],"C:\\Users\\ASUS\\Desktop\\tutorial-blog_post_app-master\\client\\src\\pages\\Write.jsx",[],[],"C:\\Users\\ASUS\\Desktop\\tutorial-blog_post_app-master\\client\\src\\components\\Footer.jsx",[],[],"C:\\Users\\ASUS\\Desktop\\tutorial-blog_post_app-master\\client\\src\\components\\Navbar.jsx",[],[],"C:\\Users\\ASUS\\Desktop\\tutorial-blog_post_app-master\\client\\src\\components\\Menu.jsx",[],[],{"ruleId":"60","severity":1,"message":"61","line":31,"column":9,"nodeType":"62","messageId":"63","endLine":31,"endColumn":16},"no-unused-vars","'getText' is assigned a value but never used.","Identifier","unusedVar"]