{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\tutorial-blog_post_app-master\\\\client\\\\src\\\\pages\\\\Register.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const [inputs, setInputs] = useState({\n    // setting initial state for inputs using useState hook\n    username: \"\",\n    email: \"\",\n    password: \"\"\n  });\n  const [err, setError] = useState(null); // setting initial state for error using useState hook\n\n  const navigate = useNavigate(); // using useNavigate hook from react-router-dom to navigate\n\n  const handleChange = e => {\n    // function to handle input changes\n    setInputs(prev => ({ ...prev,\n      [e.target.name]: e.target.value\n    })); // using spread operator to spread previous state and update the current input\n  };\n\n  const handleSubmit = async e => {\n    // function to handle form submit\n    e.preventDefault(); // preventing the default form submission behavior\n\n    try {\n      await axios.post(\"/auth/register\", inputs); // making a post request to register the user using axios library\n\n      navigate(\"/login\"); // navigating to login page after successful registration\n    } catch (err) {\n      // handling errors if any\n      setError(err.response.data); // setting error message from response data\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        required: true,\n        type: \"text\",\n        placeholder: \"username\",\n        name: \"username\",\n        onChange: handleChange // triggering handleChange function on input change\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        required: true,\n        type: \"email\",\n        placeholder: \"email\",\n        name: \"email\",\n        onChange: handleChange // triggering handleChange function on input change\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        required: true,\n        type: \"password\",\n        placeholder: \"password\",\n        name: \"password\",\n        onChange: handleChange // triggering handleChange function on input change\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), \" \", err && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: err\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Do you have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 35\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Register, \"6+bWAJeIuuz8KfTcWV9r/Mflf5g=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Register;\nexport default Register; // exporting Register component\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/tutorial-blog_post_app-master/client/src/pages/Register.jsx"],"names":["React","useState","Link","useNavigate","axios","Register","inputs","setInputs","username","email","password","err","setError","navigate","handleChange","e","prev","target","name","value","handleSubmit","preventDefault","post","response","data"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,WAAf,QAAkC,kBAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC;AACnC;AACAO,IAAAA,QAAQ,EAAE,EAFyB;AAGnCC,IAAAA,KAAK,EAAE,EAH4B;AAInCC,IAAAA,QAAQ,EAAE;AAJyB,GAAD,CAApC;AAOA,QAAM,CAACC,GAAD,EAAMC,QAAN,IAAkBX,QAAQ,CAAC,IAAD,CAAhC,CARqB,CAQmB;;AAExC,QAAMY,QAAQ,GAAGV,WAAW,EAA5B,CAVqB,CAUW;;AAEhC,QAAMW,YAAY,GAAIC,CAAD,IAAO;AAC1B;AACAR,IAAAA,SAAS,CAAES,IAAD,KAAW,EAAE,GAAGA,IAAL;AAAW,OAACD,CAAC,CAACE,MAAF,CAASC,IAAV,GAAiBH,CAAC,CAACE,MAAF,CAASE;AAArC,KAAX,CAAD,CAAT,CAF0B,CAG1B;AACD,GAJD;;AAMA,QAAMC,YAAY,GAAG,MAAOL,CAAP,IAAa;AAChC;AACAA,IAAAA,CAAC,CAACM,cAAF,GAFgC,CAEZ;;AACpB,QAAI;AACF,YAAMjB,KAAK,CAACkB,IAAN,CAAW,gBAAX,EAA6BhB,MAA7B,CAAN,CADE,CAC0C;;AAC5CO,MAAAA,QAAQ,CAAC,QAAD,CAAR,CAFE,CAEkB;AACrB,KAHD,CAGE,OAAOF,GAAP,EAAY;AACZ;AACAC,MAAAA,QAAQ,CAACD,GAAG,CAACY,QAAJ,CAAaC,IAAd,CAAR,CAFY,CAEiB;AAC9B;AACF,GAVD;;AAYA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,8BACE;AACE,QAAA,QAAQ,MADV;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,WAAW,EAAC,UAHd;AAIE,QAAA,IAAI,EAAC,UAJP;AAKE,QAAA,QAAQ,EAAEV,YALZ,CAK0B;;AAL1B;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AACE,QAAA,QAAQ,MADV;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,WAAW,EAAC,OAHd;AAIE,QAAA,IAAI,EAAC,OAJP;AAKE,QAAA,QAAQ,EAAEA,YALZ,CAK0B;;AAL1B;AAAA;AAAA;AAAA;AAAA,cARF,eAeE;AACE,QAAA,QAAQ,MADV;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,WAAW,EAAC,UAHd;AAIE,QAAA,IAAI,EAAC,UAJP;AAKE,QAAA,QAAQ,EAAEA,YALZ,CAK0B;;AAL1B;AAAA;AAAA;AAAA;AAAA,cAfF,eAsBE;AAAQ,QAAA,OAAO,EAAEM,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAtBF,EAsBmD,GAtBnD,EAwBGT,GAAG,iBAAI;AAAA,kBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,cAxBV,oBAyBE;AAAA,4DAC0B,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAD1B,EACyD,GADzD;AAAA;AAAA;AAAA;AAAA;AAAA,cAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoCD,CAlED;;GAAMN,Q;UAUaF,W;;;KAVbE,Q;AAoEN,eAAeA,QAAf,C,CAAyB","sourcesContent":["import React, { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst Register = () => {\n  const [inputs, setInputs] = useState({\n    // setting initial state for inputs using useState hook\n    username: \"\",\n    email: \"\",\n    password: \"\",\n  });\n\n  const [err, setError] = useState(null); // setting initial state for error using useState hook\n\n  const navigate = useNavigate(); // using useNavigate hook from react-router-dom to navigate\n\n  const handleChange = (e) => {\n    // function to handle input changes\n    setInputs((prev) => ({ ...prev, [e.target.name]: e.target.value }));\n    // using spread operator to spread previous state and update the current input\n  };\n\n  const handleSubmit = async (e) => {\n    // function to handle form submit\n    e.preventDefault(); // preventing the default form submission behavior\n    try {\n      await axios.post(\"/auth/register\", inputs); // making a post request to register the user using axios library\n      navigate(\"/login\"); // navigating to login page after successful registration\n    } catch (err) {\n      // handling errors if any\n      setError(err.response.data); // setting error message from response data\n    }\n  };\n\n  return (\n    <div className=\"auth\">\n      {/* containing the authentication form */}\n      <h1>Register</h1>\n      <form>\n        <input\n          required\n          type=\"text\"\n          placeholder=\"username\"\n          name=\"username\"\n          onChange={handleChange} // triggering handleChange function on input change\n        />\n        <input\n          required\n          type=\"email\"\n          placeholder=\"email\"\n          name=\"email\"\n          onChange={handleChange} // triggering handleChange function on input change\n        />\n        <input\n          required\n          type=\"password\"\n          placeholder=\"password\"\n          name=\"password\"\n          onChange={handleChange} // triggering handleChange function on input change\n        />\n        <button onClick={handleSubmit}>Register</button>{\" \"}\n        {/* triggering handleSubmit function on form submit */}\n        {err && <p>{err}</p>} {/* displaying error message if there's any */}\n        <span>\n          Do you have an account? <Link to=\"/login\">Login</Link>{\" \"}\n          {/* providing link to login page */}\n        </span>\n      </form>\n    </div>\n  );\n};\n\nexport default Register; // exporting Register component\n"]},"metadata":{},"sourceType":"module"}