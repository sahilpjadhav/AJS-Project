{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\tutorial-blog_post_app-master\\\\client\\\\src\\\\pages\\\\Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { AuthContext } from \"../context/authContext\"; // Define a functional component called Login\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  // Use useState hook to create state variables for inputs and errors\n  const [inputs, setInputs] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const [err, setError] = useState(null); // Use useNavigate hook to create a navigate function\n\n  const navigate = useNavigate(); //useContext hook to get the login function from the AuthContext.\n\n  const {\n    login\n  } = useContext(AuthContext); // Define handleChange function to update the input state variables when the user types into the input fields\n\n  const handleChange = e => {\n    setInputs(prev => ({ ...prev,\n      [e.target.name]: e.target.value\n    }));\n  }; // Define handleSubmit function to handle the form submission when the user clicks the submit button\n\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      // Post the user input to the \"/auth/login\" endpoint and navigate to the home page\n      await login(inputs);\n      navigate(\"/\");\n    } catch (err) {\n      // If there is an error, set the error state variable to the error message\n      setError(err.response.data);\n    }\n  }; // Render the login form with input fields for username and password and a button to submit the form\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"username\",\n        name: \"username\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"password\",\n        name: \"password\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), err && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: err\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Don't you have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/register\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"wQ+I1dIgTUghvAoeia9v7jh6qo4=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/tutorial-blog_post_app-master/client/src/pages/Login.jsx"],"names":["React","useContext","useState","Link","useNavigate","AuthContext","Login","inputs","setInputs","username","password","err","setError","navigate","login","handleChange","e","prev","target","name","value","handleSubmit","preventDefault","response","data"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,IAAT,EAAeC,WAAf,QAAkC,kBAAlC;AACA,SAASC,WAAT,QAA4B,wBAA5B,C,CAEA;;;;AACA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC;AACnCO,IAAAA,QAAQ,EAAE,EADyB;AAEnCC,IAAAA,QAAQ,EAAE;AAFyB,GAAD,CAApC;AAKA,QAAM,CAACC,GAAD,EAAMC,QAAN,IAAkBV,QAAQ,CAAC,IAAD,CAAhC,CAPkB,CASlB;;AACA,QAAMW,QAAQ,GAAGT,WAAW,EAA5B,CAVkB,CAYlB;;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAYb,UAAU,CAACI,WAAD,CAA5B,CAbkB,CAelB;;AACA,QAAMU,YAAY,GAAIC,CAAD,IAAO;AAC1BR,IAAAA,SAAS,CAAES,IAAD,KAAW,EAAE,GAAGA,IAAL;AAAW,OAACD,CAAC,CAACE,MAAF,CAASC,IAAV,GAAiBH,CAAC,CAACE,MAAF,CAASE;AAArC,KAAX,CAAD,CAAT;AACD,GAFD,CAhBkB,CAoBlB;;;AACA,QAAMC,YAAY,GAAG,MAAOL,CAAP,IAAa;AAChCA,IAAAA,CAAC,CAACM,cAAF;;AACA,QAAI;AACF;AACA,YAAMR,KAAK,CAACP,MAAD,CAAX;AACAM,MAAAA,QAAQ,CAAC,GAAD,CAAR;AACD,KAJD,CAIE,OAAOF,GAAP,EAAY;AACZ;AACAC,MAAAA,QAAQ,CAACD,GAAG,CAACY,QAAJ,CAAaC,IAAd,CAAR;AACD;AACF,GAVD,CArBkB,CAiClB;;;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,UAFd;AAGE,QAAA,IAAI,EAAC,UAHP;AAIE,QAAA,QAAQ,EAAET;AAJZ;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,WAAW,EAAC,UAFd;AAGE,QAAA,IAAI,EAAC,UAHP;AAIE,QAAA,QAAQ,EAAEA;AAJZ;AAAA;AAAA;AAAA;AAAA,cAPF,eAaE;AAAQ,QAAA,OAAO,EAAEM,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF,EAcGV,GAAG,iBAAI;AAAA,kBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,cAdV,eAeE;AAAA,+DAC6B,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAD7B;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CA1DD;;GAAML,K;UAUaF,W;;;KAVbE,K;AA4DN,eAAeA,KAAf","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { AuthContext } from \"../context/authContext\";\n\n// Define a functional component called Login\nconst Login = () => {\n  // Use useState hook to create state variables for inputs and errors\n  const [inputs, setInputs] = useState({\n    username: \"\",\n    password: \"\",\n  });\n\n  const [err, setError] = useState(null);\n\n  // Use useNavigate hook to create a navigate function\n  const navigate = useNavigate();\n\n  //useContext hook to get the login function from the AuthContext.\n  const { login } = useContext(AuthContext);\n\n  // Define handleChange function to update the input state variables when the user types into the input fields\n  const handleChange = (e) => {\n    setInputs((prev) => ({ ...prev, [e.target.name]: e.target.value }));\n  };\n\n  // Define handleSubmit function to handle the form submission when the user clicks the submit button\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      // Post the user input to the \"/auth/login\" endpoint and navigate to the home page\n      await login(inputs);\n      navigate(\"/\");\n    } catch (err) {\n      // If there is an error, set the error state variable to the error message\n      setError(err.response.data);\n    }\n  };\n\n  // Render the login form with input fields for username and password and a button to submit the form\n  return (\n    <div className=\"auth\">\n      <h1>Login</h1>\n      <form>\n        <input\n          type=\"text\"\n          placeholder=\"username\"\n          name=\"username\"\n          onChange={handleChange}\n        />\n        <input\n          type=\"password\"\n          placeholder=\"password\"\n          name=\"password\"\n          onChange={handleChange}\n        />\n        <button onClick={handleSubmit}>Login</button>\n        {err && <p>{err}</p>}\n        <span>\n          Don't you have an account? <Link to=\"/register\">Register</Link>\n        </span>\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}